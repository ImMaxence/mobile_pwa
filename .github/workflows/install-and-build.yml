name: Install and Build

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22] # Liste des versions Ã  tester
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: cd my-app && npm ci

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: my-app/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

  build:
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        node-version: [22] # Doit correspondre aux versions du job install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Restore cached node_modules
        uses: actions/cache@v3
        with:
          path: my-app/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies (verify or update)
        run: cd my-app && npm ci

      - name: Run build
        run: cd my-app && npm run build
