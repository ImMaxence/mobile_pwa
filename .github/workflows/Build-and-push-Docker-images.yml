name: Build and push Docker images
    
on:
  workflow_run:
    workflows: ["Versioning"]
    types:
      - completed

jobs:
  docker:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get last tag version
        id: get_last_tag
        run: |
          # Récupère le dernier tag en se basant sur la date de création
          LAST_TAG=$(git tag --sort=-creatordate | head -n 1)

          echo "Dernier tag trouvé: $LAST_TAG"

          # On enlève le "v" éventuel devant. Par exemple, v1.2.3 -> 1.2.3
          LAST_VERSION=${LAST_TAG#v}

          # On stocke dans une variable d'environnement
          echo "NEW_VERSION=$LAST_VERSION" >> $GITHUB_ENV
          
      - name: Write .env file from secret
        run: echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ env.NEW_VERSION }}
